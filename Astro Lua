--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)local z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=116,51,94,55,78,84,62,24,41,46,36,34,64,41,48,25,98,17,28,40,10,70,41,92,66,91,14,41,10,83,54,35,72,48,51,14,65,14,26,97,83,31,14,33,84,85,75,68,12,41,52 while z~=74 do if ba>=791 then if ba>=1148 then if ba<=1275 then if ba<=1197 then if ba>1150 then bn=function()local z,co,cp,cq,cr,cs,ct,cu=78,60,88,49,16,78,67,91,53,16,72,88,36,49,95,93,68,57,88 while z~=35 do if co<=195 then if co>=111 then if co<=111 then co=147 cr=bd()else if co<192 then do if((cu==0 and cr==0))then return 0 end end co=195 else co=243 cp=((-1)^bw(31,cr,1))end end else if co<94 then cp,cq,cr,cs,ct,cu=nil co=96 else co=111 cu=bd()end end else if co<=281 then if co>=266 then if co>269 then co=327 cs=1 else co=281 do cq=(bw(0,cr,20)*a+cu)end end else co=266 ct=bw(20,cr,11)end else if co>=344 then if co>347 then z=35;else co=377 return(cp*(2^(ct-1023))*(cq/bk+cs))end else co=344 do if 0==ct then do if 0~=cq then ct=1 cs=0 else return(cp*0)end end elseif not(ct==2047)then else do if w==cq then do return(cp*(0/0))end else return(cp*(1/0))end end end end end end end end end ba=1216 else be=function()local a,w a,w=bi(cj,cn,(cn+i))cn=(cn+2);return((w*256)+a);end ba=1197 end else if ba>=1249 then if ba<1270 then ce=function(...)return{...},bj('#',...)end ba=1275 else ba=1313 bq={}end else ba=1249 bb=function(a,a,a)local a,i,w,z=59,61,35,93,95,67,21,11,18,94,39,54,38 while a~=26 do if i<=125 then if i>=86 then if i<120 then z=bd()i=125 else do w=cj:sub(cn,(cn+z-1))end i=167 end else i=86 w,z=nil end else if i>=204 then if i<231 then i=240 return w;else a=26;end else cn=(cn+z);i=204 end end end end end end else if ba>=1438 then if ba>=1477 then if ba>1481 then break else ba=1507 return ck(ci(cg()),{},cg())();end else ba=1477 ck=function(a,i,w,z)local z,co,cp,cq,cr do cr=a[127]end z=ch cq=a[64]cp=a[26]co=a[160]return function(...)local a,z,cs,ct,cu,cv,cw,cx,cy z=1 cx=-1 cs=-1 cy={}cv={...}cu=(bj('#',...)-1)cw={}a={}for cs=0,cu do do if(not(cs<co))then cy[(cs-co)]=cv[(cs+1)];else a[cs]=cv[(cs+1)];end;end end;ct=(cu-co+1)while true do local co,cs,ct,cu,cv,cy,cz,da,db,dc do da=cq[z]end db=da[50]cy=da[87]cz=da[173]cu=da[17]co=da[96]do cs=da[120]end cv=da[110]dc=da[r]ct=da[113]do if not(db<26)then if not(db<39)then if not(db<46)then if not(db>48)then if not(db<47)then do if(db>47)then a[cz]=(a[dc]%cp[co]);else do a[cz]=(0~=dc);end end end else local r r=cz do a[r]=a[r]();end end else if not(db>50)then if(da[50]>49)then if(not(a[cz]==a[da[96]]))then z=dc;end;else local r r=cz a[r]=a[r](by(a,r+1,cx));end else do if(da[50]<52)then local r,cq,cs cq=cz r=a[cq]do cs=dc end do for ct=1,cs do do r[ct]=a[(cq+ct)]end end;end else a[da[173]]();end end end end else if not(db>41)then do if not(db<40)then if(db>40)then local r,cq,cs,ct cs=da[173]do ct,r=ce(a[cs](by(a,(cs+1),da[116])))end cx=(r+cs-1)cq=0 for r=cs,cx do cq=(cq+1);a[r]=ct[cq];end;else a[cz][cp[dc]]=cp[co];end else local r,cq,cs,ct r=cz do cq,ct=ce(a[r](a[(r+1)]))end do cx=(ct+r-1)end cs=0 for ct=r,cx do cs=(cs+1);a[ct]=cq[cs];end;end end else if not(db<44)then do if(db<45)then do if(not(a[cz]==cp[co]))then z=dc;end;end else local r,cq,cs cq=cz cs={a[cq](by(a,cq+1,cx))}do r=0 end do for ct=cq,co do r=(r+1);a[ct]=cs[r];end end end end else if not(db~=42)then z=dc;else local r,cq,cs r=cz cq=a[(r+2)]cs=(a[r]+cq)a[r]=cs;do if((cq>0))then while(cs<=a[r+1])do z=dc;a[r+3]=cs;break end elseif(not(cs<a[r+1]))then z=dc;a[(r+k)]=cs;end end end end end end else if not(db<32)then do if not(db>34)then if not(da[50]<33)then if(db<34)then a[da[173]]=w[cp[dc]];else do a[cz]={};end end else if a[co]then a[cz]=a[co];do z=dc;end end;end else if not(db>36)then if(da[50]<36)then a[cz]=(a[da[116]]+a[co]);else if((cp[cz]<a[co]))then z=dc;end;end else if(db<38)then local k,r,cq,cs,ct cq=cz ct=co cs=(cq+2)k={a[cq](a[cq+f],a[cs])}for f=1,ct do do a[(cs+f)]=k[f]end end r=a[(cq+3)]do if r then a[cs]=r else z=dc;end;end else do i[dc]=a[cz];end end end end end else if not(db>28)then do if not(db>26)then if((a[da[173]]<a[co]))then do z=dc;end end;else if 27==db then a[cz][cp[dc]]=a[co];else local f f=cz a[f]=a[f](a[f+1]);end end end else if not(db<30)then do if not(da[50]~=30)then local f,k k=cz f={}for r=1,#cw do local cq do cq=cw[r]end for r=0,#cq do local cs,ct,cu cs=cq[r]cu=cs[1]do ct=cs[2]end if(cu==a and ct>=k)then f[ct]=cu[ct];cs[m]=f;end;end;end;else local f do f=cz end a[f](by(a,(f+1),dc))end end else a[da[173]]=a[dc][cp[da[96]]];end end end end else do if not(db>12)then if not(db<6)then if not(db>8)then if not(db<7)then if(db<8)then do a[cz][a[dc]]=a[da[96]];end else local f,k k=dc f=a[k]for m=(k+q),co do f=(f..a[m]);end;a[cz]=f;end else a[cz]=ck(cr[dc],nil,w);end else if not(db>10)then if(db>9)then a[cz]=(a[dc]+cp[co]);else a[cz]=a[da[116]];end else if(db<12)then local f,k f=cz k=a[dc]a[(f+1)]=k;a[f]=k[cp[co]];else local f f=cz a[f](a[(f+1)])end end end else if not(db>2)then if not(db>u)then local f,k,m f=cz do m={a[f](a[f+1])}end do k=0 end for q=f,co do do k=(k+1);end a[q]=m[k];end else if(db>1)then a[cz]=(a[dc]/cp[co]);else if(not(a[cz]~=cp[co]))then do z=dc;end end;end end else if not(da[50]<4)then if(db<5)then a[da[173]]=(a[dc]-a[co]);else local f do f={}end if(#cw>0)then do for k=1,#cw do local m m=cw[k]for k=0,#m do local q,r,u u=m[k]r=u[v]q=u[2]if(r==a and q>=0)then f[q]=r[q]u[1]=f end end end end end do return da[co],0;end end else cp=ch[cz](cp)end end end else if not(db>18)then do if not(db>15)then if not(db<14)then if(da[50]<15)then local f,k,m k=cr[dc]do f=nil end m={}f=bo({},{__index=function(q,q)local q=m[q];return q[1][q[2]];end,__newindex=function(q,q,r)local q=m[q]q[1][q[2]]=r;end;});for q=1,da[96]do local r r=da[80][q]if r[1]then m[(q-1)]={a,r[2],nil,nil,nil};else m[(q-1)]={i,r[2],nil,nil};end;cw[(#cw+1)]=m;end;do a[cz]=ck(k,f,w);end else do if(not(a[da[173]]~=a[co]))then z=da[116];end;end end else a[da[173]]=#a[dc];end else if not(db>16)then a[cz]=a[dc][a[co]];else if(db>17)then local f,k,m k=cz m=a[k]f=a[(k+2)]do if((f>0))then if((m>a[k+1]))then z=da[116];else a[(k+3)]=m;end elseif((m<a[k+1]))then z=dc;else do a[(k+3)]=m;end end end else do do return a[da[173]]end end end end end end else if not(db<22)then if not(db<24)then do if(db<25)then a[da[173]]=i[dc];else a[cz]=nil;end end else if(db>y)then if not a[cz]then z=dc;end;else a[cz]=(a[dc]*cp[co]);end end else if not(db>19)then local f f=da[173]a[f]=a[f](by(a,f+1,dc));else if(db<21)then if a[cz]then do z=dc;end end;else a[cz]=cp[dc]end end end end end end end end z=(z+1);end;end;end end else if ba>=1351 then if ba>1354 then cl={}ba=1438 else ch={}ba=1393 end else ci=function(a,f)local f,i,k,m,q,r,u,v=62,60,48,72,72,67,16,80,64,98,58,46,36,10,97,20,68,36,12,11,60,90,70,24 while f~=46 do if i<=260 then if i>=178 then if i<=223 then if i<216 then k=bd()i=223 else i=242 for w=(#bq+1),(#bq+k)do local y,z,co,cp,cq=63,40,86,59,20,93,81,40,78,34,34,19,41,42,22,40,80,63,45,50,15,77 while y~=40 do if z<=267 then if z>=161 then if z<=199 then if z<197 then cp=bd()z=199 else do cq[120]=br();end z=237 end else if z<258 then cq[148]=bl(co,1,2);z=267 else cq[50]=bl(cp,1,11);z=310 end end else if z<=66 then if z>46 then z=97 cq={}else z=66 co,cp,cq=nil end else if z<120 then z=127 cq[b]=br();else co=bd()z=161 end end end else if z>=425 then if z<=449 then if z<443 then z=449 cq[110]=-cq[173]else z=480 cq[113]=-cq[96]end else if z>485 then y=40;else z=524 bq[w]=cq;end end else if z<=332 then if z<329 then z=332 do cq[173]=bl(co,o,11);end else z=347 do cq[17]=bl(co,12,20);end end else if z>352 then cq[n]=bl(cp,12,33);z=425 else cq[96]=bl(co,21,29);z=387 end end end end end end end else if i<253 then i=260 do for b=1,bd()do local n,o,w,y,z,co=72,50,37,45,69,24,54,42,99,68,73,32,60,96,97,69,68,77,40,35,51,31,41,94,16 while n~=42 do if o>=341 then if o>=494 then if o<=515 then if o<508 then o=515 co[120]=bl(z,12,20);else co[110]=-co[173]o=539 end else if o>=556 then if o<599 then o=602 do v[b]=co;end else n=42;end else o=556 co[113]=-co[96]end end else if o<=389 then if o>347 then co[173]=bl(z,3,11);o=429 else o=389 co[50]=bl(w,1,11);end else if o>437 then o=494 co[96]=bl(z,21,29);else o=476 co[116]=bl(w,12,33);end end end else if o<=136 then if o>=92 then if o<132 then co[87]=br();o=136 else o=164 co[80]={};end else if o>56 then do co={{},nil,nil}end o=92 else o=76 w,y,z,co=nil end end else if o<=204 then if o>167 then do z=bd()end o=239 else o=204 if 1==br()then for b=1,br()do co[80][b]={br()==0,bd()}end end end else if o>=281 then if o>284 then o=341 do co[148]=y end else do y=bl(z,1,2)end o=318 end else o=281 w=bd()end end end end end end end else i=283 q[64]=v;end end else if i>=117 then if i<131 then do r={}end i=137 else i=178 q={}end else if i>62 then do v={}end i=117 else i=79 k,m,q,r,u,v=nil end end end else if i>=434 then if i<=466 then if i>440 then i=502 for b=1,m do local k,n,o,v=42,59,35,81,29,71,38,44,77,81,80,30 while k~=27 do if n>=146 then if n<=146 then do if(2==v)then o=(not(br()==0));elseif(4==v)then do o=bn();end elseif(0==v)then do o=bb();end elseif(1==v)then o=a[bb()];end;end n=163 else if n>169 then k=27;else n=194 u[b]=o;end end else if n>=76 then if n<93 then do v=br()end n=102 else o=nil n=146 end else o,v=nil n=76 end end end end else i=466 do u={}end end else if i<=502 then do q[26]=u end i=521 else if i>525 then f=46;else i=561 return q;end end end else if i>=345 then if i>351 then m=bd()i=434 else do q[127]=r;end i=388 end else if i>285 then for a=1,bd()do r[a-1]=ci();end i=345 else i=317 q[160]=br();end end end end end end ba=1351 end end end else if ba>=968 then if ba>=1052 then if ba>=1099 then if ba>1103 then br=function()local a a=bi(cj,cn,cn)cn=(cn+p);return a;end ba=1148 else ba=1115 do bd=function()local a,b,f,i i,f,a,b=bi(cj,cn,(cn+3))cn=(cn+4);return((b*16777216)+(a*65536)+(f*256)+i);end end end else cn=1 ba=1099 end else if ba>=1007 then if ba<1020 then ba=1022 bu=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local f,g=0,g while a>0 and b>0 do local i,k=a%16,b%16 f=f+bs[i+1][k+1]*g a=(a-i)/e b=(b-k)/16 g=g*16 end f=f+a*g+b*g return f end)else ba=1052 bl=function(a,b,e,f,f,f)local f f=((a/2^(b-1))%2^((e-1)-(b-1)+1))return(f-f%1);end end else ba=1007 do bw=function(a,b,e,f,f,f,f)local f,g,i=76,40,34,68,25,85,56,69,87,35,49,36,30,34 while f~=42 do if g>=157 then if g<=157 then do i=(i-i%1)end g=175 else if g<205 then g=207 return i else f=42;end end else if g<=40 then g=86 i=nil else if g>91 then i=((b/bc[a])%bc[e])g=157 else g=125 i=nil end end end end end end end end else if ba>=854 then if ba>=888 then if ba<922 then ba=930 do bh=2 end else ba=968 for a=1,31 do bc[a]=bh bh=(bh*2)end end else bc={[0]=1}ba=888 end else if ba>796 then ba=854 bk=(2^52)else ba=824 do bv=''end end end end end else if ba<=400 then if ba>=246 then if ba<=306 then if ba>=264 then if ba<302 then cf=table.concat ba=306 else ba=344 ca=table.insert end else do cc=string.rep end ba=264 end else if ba>=384 then if ba<397 then ba=400 cg=(getfenv or function()return _ENV end)else do bo=setmetatable end ba=420 end else cm=math.ldexp ba=384 end end else if ba<=100 then if ba<93 then ba=100 bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=nil else ba=125 do bi=string.byte end end else if ba<=125 then ba=170 do bx=string.char end else if ba<197 then ba=206 do bg=string.sub end else bp=string.gsub ba=246 end end end end else if ba<=545 then if ba<=467 then if ba>422 then do bf=type end ba=496 else bj=select ba=467 end else if ba<=496 then ba=511 cd=(function(a,b,b,b)if'number'==bf(a)then return true else return false end end)else if ba>520 then bt=math.floor ba=575 else bz=math.abs ba=545 end end end else if ba>=702 then if ba<=702 then for a=0,255 do cb[a]=bx(a);end ba=748 else if ba>751 then bs={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,h,5,4,7,6,9,8,11,t,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,l,8,15,14,13,12,},{4,5,6,7,0,1,2,x,12,13,14,15,8,c,10,11,},{5,4,7,6,1,0,d,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,s,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,j,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}ba=791 else cj=bpfunction(a,b)return cb[bm(a,16)]end)ba=775 end end else if ba<=575 then ba=624 by=(unpack or table.unpack)else if ba<658 then ba=663 do bm=tonumber end else cb={}ba=702 end end end end end end end end)(4294967296,87,9,3,16,1,1,2,2,12,3,9,1,116,3,1,1,116,15,10,0,1,0,3,22)end
