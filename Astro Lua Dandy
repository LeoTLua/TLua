--[[

░██████╗██╗░░██╗██╗██████╗░  ██╗░░██╗██████╗░
██╔════╝██║░██╔╝██║██╔══██╗  ╚██╗██╔╝██╔══██╗
╚█████╗░█████═╝░██║██║░░██║  ░╚███╔╝░██║░░██║
░╚═══██╗██╔═██╗░██║██║░░██║  ░██╔██╗░██║░░██║
██████╔╝██║░╚██╗██║██████╔╝  ██╔╝╚██╗██████╔╝
╚═════╝░╚═╝░░╚═╝╚═╝╚═════╝░  ╚═╝░░╚═╝╚═════╝░                                                                                                       
--]]

-- NOTHING FOR YOU SKID --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)local p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd=82,52,35,44,24,26,84,71,50,77,74,80,73,19,42,31,98,53,84,73,24,85,29,59,41,75,65,63,46,82,44,85,92,18,67,48,20,89,64,99,91,63,46,12,33,75,79,63,95,65,66,42,91 while p~=68 do if q>=739 then if q<=1031 then if q>=912 then if q<=972 then if q<=912 then bc=function(ce,cf,cg,ch,ch,ch)local ch,ci,cj=64,50,13,60,56,15,34,88,39,52,87,92 while ch~=37 do if ci>=155 then if ci>=204 then if ci<211 then ci=220 return cj else ch=37;end else ci=204 cj=(cj-cj%1)end else if ci<=50 then ci=76 cj=nil else if ci>83 then ci=155 do cj=((cf/bx[ce])%bx[cg])end else cj=nil ci=111 end end end end end q=941 else if q<966 then bb=(bit_lib and bit_lib.bxor or function(ce,cf)ce=ce%(2^32)cf=cf%(2^32)local cg,ch=0,1 while ce>0 and cf>0 do local ci,cj=ce%16,cf%16 cg=cg+y[ci+1][cj+1]*ch ce=(ce-ci)/16 cf=(cf-cj)/16 ch=ch*16 end cg=cg+ce*ch+cf*ch return cg end)q=972 else q=1000 bj=function(ce,cf,cg,ch,ch,ch)local ch ch=((ce/2^(cf-1))%2^((cg-1)-(cf-c)+1))do return(ch-ch%1);end end end end else if q>=1015 then if q>1023 then r=function()local c do c=bh(bl,s,s)end do s=(s+1);end return c;end q=1076 else q=1031 bg=function()local c,ce,cf,cg cf,ce,cg,c=bh(bl,s,(s+3))s=(s+4);return((c*16777216)+(cg*65536)+(ce*256)+cf);end end else do s=1 end q=1015 end end else if q<=776 then if q<771 then bq=''q=776 else do x=(2^52)end q=824 end else if q>=865 then if q<881 then by=2 q=884 else do for c=1,31 do bx[c]=by by=(by*2)end end q=912 end else q=865 do bx={[0]=1}end end end end else if q>=1247 then if q<=1312 then if q>=1275 then if q>1282 then do v={}end q=1353 else q=1312 z={}end else bd=function(c,ce,ce,ce)local ce,cf,cg,ch,ci,cj,ck,cl=80,50,36,25,59,20,81,90,94,46,80,59,22,92,77,59,21,32,97,44,94,30,95,57,61,30 while ce~=43 do if cf>=294 then if cf>=409 then if cf<=455 then if cf>411 then do cg[190]=cl;end cf=478 else do for cm=1,bg()do cl[cm-1]=bd();end end cf=455 end else if cf>=504 then if cf<540 then cf=546 return cg;else ce=43;end else cg[189]=r();cf=504 end end else if cf>=356 then if cf>362 then cg[185]=ci cf=409 else for ce=1,cj do local cm,cn,co,cp=54,44,47,22,29,55,55,95,57,99,36,98,53 while cm~=33 do if cn>=154 then if cn>=200 then if cn<236 then cn=244 ci[ce]=cp;else break end else if(2==co)then do cp=(not(r()==0));end elseif(1==co)then cp=t();elseif(not(co~=3))then cp=bv();elseif(not(co~=0))then cp=c[bv()];end;cn=200 end else if cn>=89 then if cn<112 then cn=117 co=r()else cn=154 cp=nil end else co,cp=nil cn=89 end end end end cf=389 end else if cf<326 then cf=329 cj=bg()else do ci={}end cf=356 end end end else if cf>=179 then if cf<=212 then if cf>183 then cf=231 for c=(#bi+1),(#bi+ch)do local ce,cm,cn,co,cp=72,63,26,32,44,71,29,72,84,96,81,97,75,72,64,19,94,91,82,44,62,79,45 while ce~=51 do if cm>=338 then if cm<=411 then if cm<=354 then if cm<347 then do cp[129]=bj(cn,3,11);end cm=354 else cm=372 cp[103]=bj(cn,12,20);end else if cm<408 then cp[170]=bj(cn,21,29);cm=411 else cm=445 cp[18]=bj(co,d,33);end end else if cm<=465 then if cm<456 then cp[42]=-cp[129]cm=465 else cm=505 cp[67]=-cp[170]end else if cm<541 then cm=543 bi[c]=cp;else ce=51;end end end else if cm<=177 then if cm>=134 then if cm>142 then cn=bg()cm=226 else do cp[19]=r();end cm=177 end else if cm>65 then cp={}cm=134 else cm=89 cn,co,cp=nil end end else if cm<=247 then if cm<239 then cm=247 co=bg()else cp[89]=r();cm=269 end else if cm>272 then cp[15]=bj(co,1,11);cm=338 else cm=315 cp[127]=bj(cn,1,2);end end end end end end else cf=212 ch=bg()end else if cf<245 then cf=251 for c=1,bg()do local d,ce,cm,cn,co,cp=67,48,95,69,14,27,66,15,82,65,95,63,83,33,18,80,12,47,16,38,37,34,76,87,51,81 while d~=50 do if ce>=300 then if ce>=450 then if ce>=510 then if ce<=510 then cp[67]=-cp[170]ce=526 else if ce>535 then d=50;else ce=565 ck[c]=cp;end end else if ce<489 then cp[89]=bj(cm,12,20);ce=492 else ce=510 do cp[42]=-cp[129]end end end else if ce<=346 then if ce>303 then cp[129]=bj(cm,3,j);ce=365 else ce=346 cp[15]=bj(co,1,11);end else if ce>373 then cp[170]=bj(cm,21,29);ce=450 else ce=403 do cp[18]=bj(co,12,o);end end end end else if ce>=161 then if ce<=188 then if ce<180 then if 1==r()then for c=1,r()do do cp[133][c]={r()==0,bg()}end end end ce=188 else ce=205 cm=bg()end else if ce>=243 then if ce>248 then do cp[127]=cn end ce=300 else ce=261 do cn=bj(cm,1,2)end end else co=bg()ce=243 end end else if ce>=82 then if ce>88 then ce=161 do cp[133]={};end else cp[19]=r();ce=131 end else if ce<56 then ce=63 cm,cn,co,cp=nil else cp={{},nil,nil,nil}ce=82 end end end end end end else do cg[64]=ck;end cf=294 end end else if cf<=94 then if cf<86 then cg,ch,ci,cj,ck,cl=nil cf=94 else cf=119 ck={}end else if cf>124 then cg={}cf=179 else cf=142 cl={}end end end end end end q=1275 end else if q<=1353 then ca=function(c,d,j,o,o,o)local o,ce,cf,cg,ch cf=c[185]ch=c[64]ce=z o=c[189]cg=c[190]return function(...)local c,ce,ci,cj,ck,cl,cm,cn,co cl=1 co=-1 cn=-1 ck={}cm={...}ce=(be('#',...)-l)c={}do ci={}end do for l=0,ce do do if(not(l<o))then ck[(l-o)]=cm[(l+1)];else ci[l]=cm[(l+1)];end;end end;end do cj=(ce-o+1)end while true do local l,o,ce,cj,ck,cm,cn,cp,cq,cr cr=ch[cl]cn=cr[15]do o=cr[19]end cq=cr[129]ce=cr[103]l=cr[170]cp=cr[89]do cm=cr[42]end do ck=cr[18]end cj=cr[67]if not(cr[15]<25)then if not(cn<37)then do if not(cn>42)then do if not(cn>39)then do if not(cn>37)then local o,ch do o=cq end ch=ci[ck]ci[(o+1)]=ch;ci[o]=ch[cf[cr[170]]];else if 38==cn then local o,ch,cj ch=cq o=ci[(ch+2)]cj=(ci[ch]+o)ci[ch]=cj;if((o>0))then if(not(cj>ci[ch+1]))then cl=ck;ci[(ch+3)]=cj;end elseif(not(cj<ci[ch+1]))then cl=ck;ci[(ch+3)]=cj;end else ci[cq]=(ci[ck]*cf[l]);end end end else if not(cn>40)then local o,ch,cj o=cq do cj={ci[o](ci[o+1])}end ch=0 for cm=o,l do ch=(ch+1);ci[cm]=cj[ch];end else if(cr[15]>41)then ci[cr[129]]=(ci[ck]%cf[l]);elseif(cf[l]~=ci[cq])then cl=ck;end end end end else if not(cn>45)then if not(cn<44)then if 44==cn then ci[cq]=ci[ck][cf[l]];else ci[cr[129]]=ca(cg[ck],nil,j);end else if(ci[cr[170]]==ci[cq])then cl=cr[18];end;end else if not(cn>47)then if(cr[15]>46)then ci[cq]=(ci[ck]+ci[l]);else local o,ch,cj,cm o=cq cm,ch=bn(ci[o](bz(ci,(o+1),ck)))co=(ch+o-1)do cj=0 end do for ch=o,co do do cj=(cj+1);end do ci[ch]=cm[cj];end end;end end else if(cr[15]>48)then while ci[cq]do cl=ck;break end else d[ck]=ci[cq];end end end end end else do if not(cn<31)then if not(cn>33)then if not(cn>31)then if not ci[cr[129]]then cl=cr[18];end;else if(cr[15]<33)then cl=ck;else ci[cq]();end end else if not(cn<35)then if 35==cn then ci[cr[129]]=(ci[ck]/cf[l]);else local o o=cr[129]ci[o](ci[(o+1)])end else local o,ch,cj o=cq ch=ci[o]cj=ci[(o+2)]if((cj>0))then if((ch>ci[o+1]))then cl=ck;else ci[(o+3)]=ch;end elseif((ch<ci[o+1]))then cl=ck;else do ci[(o+3)]=ch;end end end end else do if not(cn<28)then do if not(cn>28)then while(cf[cq]<ci[l])do cl=ck;break end else if(cn>g)then local g do g=cr[129]end ci[g]=ci[g]();else local g g=cr[129]ci[g]=ci[g](bz(ci,g+1,co));end end end else do if not(cn<26)then if(cr[15]>26)then do while(ci[cq]~=ci[cr[170]])do cl=ck;break end end else local g g=cq ci[g]=ci[g](ci[g+1]);end else do return ci[cq]end end end end end end end end else if not(cn<12)then do if not(cn>17)then do if not(cn<15)then if not(cn<16)then if not(cn~=16)then ci[cq]=nil;elseif((ci[cq]<ci[l]))then cl=ck;end else ci[cq]=(ci[ck]+cf[l]);end else do if not(cn>12)then local g,o,ch ch=cq o=ci[ch]g=ck for cj=1,g do o[cj]=ci[(ch+cj)]end;else if not(cr[n]~=13)then local g do g={}end if(#c>0)then for n=m,#c do local m m=c[n]do for n=0,#m do local o,ch,cj ch=m[n]o=ch[1]cj=ch[2]if(o==ci and cj>=0)then g[cj]=o[cj]do ch[1]=g end end end end end end return true,cr[ce],ci[(cq+2)];else local g,m,n,o do o=cq end g,n=bn(ci[o](ci[(o+1)]))co=(n+o-1)do m=0 end for n=o,co do m=(m+1);ci[n]=g[m];end;end end end end end else do if not(cr[15]<21)then if not(cn>22)then if 21==cn then ci[cq][cf[ck]]=ci[l];else ci[cq]=ci[ck][ci[l]];end else if(cn>23)then local g g=cr[129]ci[g]=ci[g](bz(ci,g+1,ck));else ci[cr[129]]=j[cf[ck]];end end else if not(cn>18)then local g,m g=ck m=ci[g]for n=(g+1),cr[170]do m=(m..ci[n]);end;ci[cq]=m;else do if(cr[15]>19)then ci[cr[129]]=cf[ck]else ci[cq][cf[ck]]=cf[l];end end end end end end end else if not(cn>5)then if not(cn<3)then if not(cn<4)then if not(cn~=4)then cf=z[cq](cf)else ci[cq]={};end else ci[cq]=(ci[ck]-ci[l]);end else if not(cn<1)then if(cn<2)then do ci[cr[129]][ci[ck]]=ci[l];end else ci[cq]=ci[ck];end else do ci[cq]=d[ck];end end end else do if not(cr[15]<9)then if not(cn<10)then if(cn>10)then ci[cq]=#ci[ck];else local g,m,n g=cq n={ci[g](bz(ci,g+1,co))}m=0 do for o=g,l do m=(m+1);do ci[o]=n[m];end end end end else local g g=cr[129]ci[g](bz(ci,(g+1),ck))end else if not(cn<7)then do if(cn>7)then local g,m,n m=cg[ck]n=nil g={}n=bo({},{__index=function(o,o)local o=g[o];return o[1][o[2]];end,__newindex=function(o,o,ce)local o=g[o]o[1][o[2]]=ce;end;});for o=1,l do local ce ce=cr[133][o]if ce[1]then g[(o-1)]={ci,ce[2],nil,nil,nil};else g[(o-1)]={d,ce[2],nil,nil};end;c[(#c+1)]=g;end;ci[cr[129]]=ca(m,n,j);else ci[cr[129]]=(0~=cr[18]);end end else local c,d,g,j,m m=cq d=l j=(m+e)c={ci[m](ci[m+1],ci[j])}for e=1,d do ci[(j+e)]=c[e]end g=ci[(m+3)]if g then ci[j]=g else cl=ck;end;end end end end end end do cl=(cl+1);end end;end;end q=1386 else if q<1425 then q=1428 return ca(bd(ba()),{},ba())();else p=68;end end end else if q>=1127 then if q<=1127 then q=1176 bv=function(c,c,c)local c,d,e,g=72,39,11,79,31,32,18,38,33,64,76,41,44,28,90 while c~=31 do if d>=121 then if d<=121 then s=(s+g);d=151 else if d<170 then d=179 return e;else break end end else if d>=67 then if d<75 then g=bg()d=84 else e=bl:sub(s,(s+g-1))d=121 end else e,g=nil d=67 end end end end else if q>1178 then q=1247 bi={}else q=1208 bn=function(...)return{...},be('#',...)end end end else if q<1095 then cc=function()local c,d c,d=bh(bl,s,(s+2))s=(s+2);return((d*256)+c);end q=1097 else t=function()local c,d,e,g,j,l,m,n=79,61,12,42,58,11,84,37,97,21,70,91,84,59,60,94,44 while c~=30 do if d>=225 then if d>=318 then if d<=318 then d=336 if not(m~=0)then do if 0~=e then m=1 j=0 else return(n*0)end end elseif 2047~=m then else if not(e~=0)then do return(n*(0/0))end else return(n*(1/0))end end else if d<355 then d=361 do return(n*(2^(m-1023))*(e/x+j))end else break end end else if d>=274 then if d>282 then j=1 d=318 else e=(bc(0,l,20)*4294967296+g)d=301 end else m=bc(20,l,11)d=274 end end else if d>=136 then if d<=136 then l=bg()d=156 else if d>161 then n=((-1)^bc(31,l,1))d=225 else d=179 if((g==0 and l==0))then return 0 end end end else if d<87 then d=91 e,g,j,l,m,n=nil else do g=bg()end d=136 end end end end end q=1127 end end end end else if q<=395 then if q<=190 then if q>=113 then if q>=159 then if q>164 then cd=string.gsub q=221 else bm=string.sub q=190 end else bk=string.char q=159 end else if q>59 then q=113 bh=string.byte else r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd=nil q=79 end end else if q>=303 then if q<=303 then q=352 bw=math.ldexp else if q>354 then do bo=setmetatable end q=430 else q=395 ba=(getfenv or function()return _ENV end)end end else if q>=245 then if q>251 then q=303 do br=table.insert end else do u=table.concat end q=270 end else q=245 cb=string.rep end end end else if q<=558 then if q<=465 then if q>433 then bs=type q=500 else be=select q=465 end else if q<=500 then q=527 bp=(function(c,d,d,d)if not(bs(c)~='number')then return true else return false end end)else if q>536 then w=math.floor q=583 else bf=math.abs q=558 end end end else if q>=664 then if q>=684 then if q>687 then y={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,f,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,k,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,a,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,i,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,h,0,1,},{15,14,13,12,11,10,b,8,7,6,5,4,3,2,1,0,},nil,nil,nil}q=739 else do bl=cdfunction(a,b,b,b)do return bt[bu(a,16)]end end)end q=720 end else q=684 for a=0,255 do bt[a]=bk(a);end end else if q<=583 then do bz=(unpack or table.unpack)end q=606 else if q<626 then q=630 bu=tonumber else bt={}q=664 end end end end end end end end)(11,9,1,12,2,14,29,3,7,11,7,1,1,15,33)
