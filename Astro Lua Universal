--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,y,y)local y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=94,69,37,22,19,79,20,66,67,89,64,59,45,70,30,79,59,47,25,31,86,76,11,56,59,32,98,10,10,30,53,89,72,99,46,48,67,76,19,95,46,45,59,82,87,18,62,17,99,78,92 while y~=74 do if z<=702 then if z<=352 then if z>=206 then if z>=300 then if z<=300 then z=320 cf=math.ldexp else if z<343 then bt=(getfenv or function()return _ENV end)z=352 else z=401 bc=setmetatable end end else if z>=240 then if z>248 then z=300 ce=table.insert else do bd=table.concat end z=257 end else z=240 ci=string.rep end end else if z<=100 then if z<96 then z=100 ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=nil else z=116 cg=string.byte end else if z>=160 then if z<169 then z=176 do bq=string.sub end else z=206 do cd=string.gsub end end else z=160 ck=string.char end end end else if z>=551 then if z<=600 then if z<=551 then z=572 bw=(unpack or table.unpack)else if z>578 then z=631 bo={}else ch=tonumber z=600 end end else if z<=631 then for y=0,255 do do bo[y]=ck(y);end end z=674 else if z>678 then z=721 do bl={{0,1,2,3,4,m,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,q,13,12,15,14,},{2,3,0,1,6,7,4,5,10,p,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,n,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,g,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,o,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,c,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,u,2,3,0,1,6,7,4,l,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,j,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end else z=702 cj=cdfunction(c,g,g,g)return bo[ch(c,16)]end)end end end else if z>=463 then if z>=493 then if z>502 then cl=math.floor z=551 else z=527 bx=math.abs end else bk=(function(c,g,g,g,g)do if'number'==bs(c)then return true else return false end end end)z=493 end else if z<433 then cm=select z=436 else bs=type z=463 end end end end else if z<=1059 then if z>=886 then if z<=959 then if z<=886 then bz=function(c,g,j,l)local l,m,n=72,47,65,61,92,18,71,94,23,99,15,38,80 while l~=30 do if m<=117 then if m<=47 then n=nil m=95 else if m>98 then n=((g/bj[c])%bj[j])m=139 else n=nil m=117 end end else if m>=184 then if m<210 then m=217 return n else break end else n=(n-n%1)m=184 end end end end z=930 else if z>934 then by=function(c,g,j,l)local l l=((c/2^(g-1))%2^((j-1)-(g-1)+1))return(l-l%1);end z=1008 else do ca=(bit_lib and bit_lib.bxor or function(c,g)c=c%(2^32)g=g%(2^32)local j,l=0,1 while c>0 and g>0 do local m,n=c%16,g%16 j=j+bl[m+1][n+1]*l c=(c-m)/16 g=(g-n)/16 l=l*16 end j=j+c*l+g*l return j end)end z=959 end end else if z<=1008 then bm=1 z=1041 else if z<1050 then z=1059 ba=function()local c,g,j,l l,c,j,g=cg(cj,bm,(bm+3))do bm=(bm+4);end return((g*16777216)+(j*65536)+(c*256)+l);end else z=1078 bv=function()local c c=cg(cj,bm,bm)do bm=(bm+1);end return c;end end end end else if z>=788 then if z>=833 then if z>836 then for c=1,31 do bj[c]=br do br=(br*2)end end z=886 else z=851 br=2 end else do bj={[0]=1}end z=833 end else if z<740 then z=745 be=''else do bi=(2^52)end z=788 end end end else if z>=1240 then if z>=1309 then if z<=1309 then cc=function(c,g,j,l,l,l)local l,m,n,o,p do o=bn end l=c[54]n=c[173]p=c[32]m=c[101]return function(...)local c,o,q,u,y,bd,be,bj,bk do q=1 end c=-1 bj=-1 do u={}end bk={...}bd=(cm('#',...)-1)be={}do y={}end for bj=f,bd do if(not(bj<p))then u[(bj-p)]=bk[(bj+1)];else do y[bj]=bk[(bj+1)];end end;end;o=(bd-p+1)while true do local f,o,p,u,bd,bj,bk,bl,bo,bq do bo=l[q]end f=bo[190]bj=bo[71]bd=bo[164]bq=bo[x]u=bo[35]bl=bo[7]p=bo[5]o=bo[199]bk=bo[142]if not(f<26)then if not(bo[190]<39)then if not(f>45)then if not(bo[190]<42)then if not(f>43)then if(f<43)then y[bd]=y[bo[199]][n[u]];else q=bo[199];end else if(f<45)then local l,p,x do p=bd end x={y[p](bw(y,p+1,c))}l=0 for bj=p,u do l=(l+1);y[bj]=x[l];end else local l,p,x x=bd p=y[x]l=y[(x+2)]do if((l>0))then if((p>y[x+1]))then do q=o;end else y[(x+3)]=p;end elseif((p<y[x+1]))then q=o;else y[(x+3)]=p;end end end end else if not(f>39)then local l,p p=bo[199]l=y[p]do for x=(p+1),u do l=(l..y[x]);end;end y[bd]=l;else if 40==f then if y[bo[164]]then q=bo[199];end;else local l,p,x,bj,bk p=bo[164]l=u bj=(p+2)bk={y[p](y[p+1],y[bj])}for bl=1,l do y[(bj+bl)]=bk[bl]end x=y[(p+3)]if x then y[bj]=x else q=bo[199];end;end end end else do if not(f<49)then if not(f<51)then if 51==f then local l,p,x p=bo[164]x={y[p](y[p+1])}do l=i end for i=p,bo[35]do l=(l+1);do y[i]=x[l];end end else local i,l,p p=bd i=y[(p+2)]l=(y[p]+i)y[p]=l;if((i>k))then if(not(l>y[p+1]))then q=o;y[(p+3)]=l;end elseif(not(l<y[p+1]))then q=o;y[(p+3)]=l;end end else if not(f~=49)then local i do i=bd end y[i]=y[i](y[i+1]);else do y[bd]=j[n[o]];end end end else if not(f>46)then if(not(y[bd]~=n[bo[35]]))then q=bo[199];end;else do if(f>47)then local i i={}do while#be>0 do for k=1,#be do local k=be[k]for l=0,#k do local k=k[l]local l=k[1]local p=k[2]if l==y and p>=0 then i[p]=l[p]k[1]=i end end end break end end return bo[bd],0,y[(bd+1)];else do return y[bd]end end end end end end end else if not(f>31)then do if not(f<29)then do if not(f>29)then y[bd]=#y[bo[h]];else if(f<31)then do y[bo[164]]=y[o][y[bo[35]]];end else y[bd]=(y[o]+y[u]);end end end else if not(f>26)then y[bd]=n[o]else if(f>27)then do y[bd]=nil;end else y[bo[164]]=g[o];end end end end else do if not(f>34)then if not(f<33)then do if(bo[190]>33)then local h h=bd do y[h](y[(h+1)])end else y[bd]();end end else y[bd]=(y[o]*n[u]);end else if not(f<37)then if(f<38)then if not y[bd]then q=o;end;else local h,i,k,l do k=bo[164]end do l,h=bb(y[k](y[(k+1)]))end c=(h+k-1)i=0 for h=k,c do i=(i+1);y[h]=l[i];end;end else if(f<36)then y[bd]=(y[bo[199]]/n[u]);else n=bn[bd](n)end end end end end end else do if not(f>12)then if not(bo[190]<6)then do if not(f<9)then if not(f<v)then if 11==f then y[bd]=(y[bo[199]]+n[u]);else y[bd]=(y[o]%n[u]);end else if not(f~=9)then do if(n[u]~=y[bd])then q=o;end;end else local h,i,k k=m[bo[199]]h=nil i={}h=bc({},{__index=function(l,l)local l=i[l];return l[1][l[2]];end,__newindex=function(l,l,p)local l=i[l]l[1][l[2]]=p;end;});do for l=1,u do local p p=bo[44][l]if p[1]then i[(l-1)]={y,p[2],nil,nil,nil,nil};else i[(l-1)]={g,p[2],nil,nil};end;be[(#be+1)]=i;end;end y[bd]=cc(k,h,j);end end else do if not(f>6)then local h,i,k,l do h=bd end l,k=bb(y[h](bw(y,(h+1),bo[199])))c=(k+h-r)i=0 for k=h,c do i=(i+1);y[k]=l[i];end;else if(f<8)then y[bd]=cc(m[o],nil,j);else y[bd]={};end end end end end else if not(bo[190]>2)then if not(f<1)then if(f<2)then j[n[o]]=y[bd];else y[bd][n[bo[199]]]=y[u];end else y[bd]=(not(o==0));end else if not(f<4)then if not(bo[190]~=4)then local h h=bd y[h]=y[h](bw(y,h+1,o));else local h,i i=bd do h=y[bo[199]]end y[(i+1)]=h;y[i]=h[n[u]];end else y[bd]=(not y[o]);end end end else if not(f<19)then if not(f>21)then if not(bo[190]>19)then do y[bd][n[o]]=n[bo[35]];end else if(f>20)then local h,i,j j=bd i=y[j]h=o do for k=1,h do i[k]=y[(j+k)]end;end else local h h=bd y[h]=y[h]();end end else if not(f<24)then if(f<25)then do if(not(y[bd]==y[u]))then q=o;end;end else local h h=bd y[h](bw(y,(h+1),o))end else do if(f>22)then y[bd]=y[o];else local h h=bd do y[h]=y[h](bw(y,h+1,c));end end end end end else if not(bo[190]<16)then do if not(f>16)then if(y[u]==y[bo[164]])then q=o;end;else if(f<18)then if((n[bd]<y[u]))then q=o;end;else y[bd]=(y[o]-y[u]);end end end else do if not(f<14)then if(f>14)then do g[o]=y[bd];end else do y[bd][y[o]]=y[u];end end else if((y[bd]<y[u]))then q=o;end;end end end end end end end q=(q+1);end;end;end z=1357 else if z>1365 then break else z=1380 return cc(bp(bt()),{},bt())();end end else if z>=1258 then if z<1285 then z=1293 bn={}else z=1309 do bh={}end end else z=1258 bp=function(c,f)local f,g,h,i,j,k,l,m=65,51,37,26,64,50,32,26,62,14,39,57,53,57,17,82,72,84,41,58,22,57,23,85,67,32,66 while f~=43 do if g<=343 then if g<=167 then if g<=95 then if g>53 then m={}g=129 else h,i,j,k,l,m=nil g=95 end else if g>133 then do l={}end g=215 else g=167 k={}end end else if g<=263 then if g>223 then g=310 for f=(#cb+1),(#cb+i)do local n,o,p,q,r=46,35,69,22,97,99,44,34,23,24,33,34,24,22,86,38,50,15,31,24,20,69,65,50,96 while n~=35 do if o<=298 then if o<=142 then if o>=122 then if o<136 then o=142 r[71]=bv();else do q=ba()end o=190 end else if o<75 then o=78 p,q,r=nil else o=122 r={}end end else if o>=266 then if o<292 then r[133]=by(q,1,2);o=298 else o=345 do r[190]=by(p,1,11);end end else if o<224 then do p=ba()end o=227 else o=266 r[7]=bv();end end end else if o>=419 then if o>=479 then if o>483 then n=35;else o=518 cb[f]=r;end else if o>428 then o=479 r[142]=-r[35]else r[5]=-r[164]o=446 end end else if o<=365 then if o>352 then r[194]=by(q,12,20);o=384 else o=365 r[164]=by(q,3,11);end else if o>387 then r[199]=by(p,12,33);o=419 else r[35]=by(q,21,b);o=399 end end end end end end else i=ba()g=263 end else if g>313 then h={}g=380 else j=ba()g=343 end end end else if g>=518 then if g>=574 then if g<=574 then l[54]=m;g=591 else if g<621 then g=627 return l;else break end end else if g>522 then g=574 for b=1,ba()do local f,i,n,o,p,q=55,74,39,28,97,49,26,76,50,42,97,63,79,89,58,90,43,16,44,28,55,88,97,86,21 while f~=40 do if i<=349 then if i<=169 then if i>=144 then if i<167 then o[71]=bv();i=169 else i=208 do o[44]={};end end else if i<110 then i=113 n,o,p,q=nil else i=144 o={{},nil,nil,nil,nil}end end else if i<=248 then if i>210 then n=ba()i=281 else if 1==bv()then do for f=1,bv()do do o[44][f]={bv()==0,ba()}end end end end i=248 end else if i>=327 then if i>329 then o[133]=p i=364 else do p=by(n,1,2)end i=349 end else q=ba()i=327 end end end else if i>=505 then if i<=533 then if i<529 then o[7]=by(n,12,20);i=533 else o[5]=-o[d]i=582 end else if i<=582 then i=603 o[142]=-o[35]else if i>612 then break else i=623 m[b]=o;end end end else if i<=400 then if i<393 then i=400 o[s]=by(q,1,11);else o[164]=by(n,3,11);i=426 end else if i>431 then o[35]=by(n,21,29);i=505 else i=472 o[199]=by(q,12,33);end end end end end end else g=541 l[101]=k;end end else if g<=429 then if g<422 then g=429 for b=1,j do local d,f,i,j=63,53,30,94,58,72,66,21,80,11,74,23,81,44 while d~=36 do if f>=156 then if f>=171 then if f>176 then break else f=219 h[b]=i;end else f=171 do if(not(j~=3))then do i=(0~=bv());end elseif(2==j)then i=bu();elseif(1==j)then i=bf();elseif(not(j~=0))then i=c[bf()];end;end end else if f>=94 then if f>99 then f=156 i=nil else j=bv()f=109 end else f=94 i,j=nil end end end end else g=457 do l[173]=h end end else if g<481 then g=489 l[a]=bv();else g=518 for a=1,ba()do k[a-1]=bp();end end end end end end end end end else if z>=1135 then if z>=1161 then if z<1190 then do bb=function(...)return{...},cm('#',...)end end z=1199 else cb={}z=1240 end else z=1161 bf=function(a,a,a)local a,b,c,d=67,52,16,57,56,32,30,18,78,78,89,65,61 while a~=34 do if b>=156 then if b<=156 then bm=(bm+d);b=205 else if b>212 then break else b=252 return c;end end else if b>=77 then if b<110 then do d=ba()end b=117 else do c=cj:sub(bm,(bm+d-1))end b=156 end else c,d=nil b=77 end end end end end else if z>1081 then z=1135 bu=function()local a,b,c,d,f,g,h,i=73,46,35,14,46,87,38,15,74,31,91,94,50,14,33,51,97,16 while a~=37 do if b>=202 then if b>=315 then if b>=349 then if b>356 then a=37;else b=366 return(c*(2^(f-1023))*(g/bi+i))end else if t==f then if 0~=g then do f=1 end do i=0 end else return(c*0)end elseif 2047~=f then else do if 0==g then do return(c*(0/0))end else return(c*(1/0))end end end b=349 end else if b<=202 then f=bz(20,d,11)b=247 else if b<284 then g=(bz(0,d,20)*4294967296+h)b=292 else b=315 i=w end end end else if b>=123 then if b>=147 then if b>149 then c=((-1)^bz(31,d,1))b=202 else if((h==0 and d==0))then return 0 end b=177 end else b=147 d=ba()end else if b<72 then c,d,f,g,h,i=nil b=78 else h=ba()b=123 end end end end end else bg=function()local a,b a,b=cg(cj,bm,(bm+2))bm=(bm+2);return((b*e)+a);end z=1106 end end end end end end end)(32,29,11,164,256,0,2,199,0,12,0,5,5,0,2,11,10,1,190,0,13,11,1,194)
