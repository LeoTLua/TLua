--[[

░██████╗██╗░░██╗██╗██████╗░  ██╗░░██╗██████╗░
██╔════╝██║░██╔╝██║██╔══██╗  ╚██╗██╔╝██╔══██╗
╚█████╗░█████═╝░██║██║░░██║  ░╚███╔╝░██║░░██║
░╚═══██╗██╔═██╗░██║██║░░██║  ░██╔██╗░██║░░██║
██████╔╝██║░╚██╗██║██████╔╝  ██╔╝╚██╗██████╔╝
╚═════╝░╚═╝░░╚═╝╚═╝╚═════╝░  ╚═╝░░╚═╝╚═════╝░                                                                                                       
--]]

-- NOTHING FOR YOU SKID --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,bd,bd)local bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=87,88,27,93,16,74,15,50,57,78,10,98,82,51,64,74,84,44,54,83,55,84,47,98,77,86,66,93,69,64,36,67,59,12,60,17,44,92,20,77,93,46,68,52,28,51,91,67,14,99,14,59,78 while bd~=71 do if be<=847 then if be>=531 then if be>=658 then if be<=752 then if be<=658 then bn=(unpack or table.unpack)be=705 else if be<748 then be=752 bi=tonumber else be=770 bo={}end end else if be>=809 then if be>818 then do bm={{0,1,2,3,4,5,6,7,q,9,10,11,12,13,14,15,},{1,0,3,2,5,y,7,6,9,8,11,10,13,12,15,14,},{2,m,0,1,6,g,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,r,2,13,12,15,14,9,8,c,10,},{6,7,4,5,2,3,0,1,14,15,s,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,f,11,10,9,8,},{8,9,b,11,12,13,14,15,0,1,u,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,x,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,t,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end be=871 else bq=cafunction(b,c)return bo[bi(b,16)]end)be=847 end else be=809 for b=0,255 do do bo[b]=ch(b);end end end end else if be<=564 then if be<561 then be=564 ck=select else bj=type be=580 end else if be<=580 then cr=(function(b,c,c,c)if not(bj(b)~='number')then return true else return false end end)be=612 else if be<629 then do cf=math.abs end be=636 else br=math.floor be=658 end end end end else if be>=281 then if be<=379 then if be<=281 then be=330 do by=string.rep end else if be>334 then cl=table.insert be=413 else bt=table.concat be=379 end end else if be>=446 then if be<481 then cp=(getfenv or function()return _ENV end)be=489 else be=531 bl=setmetatable end else be=446 cn=math.ldexp end end else if be>=137 then if be<=137 then do ch=string.char end be=184 else if be>186 then ca=string.gsub be=281 else bs=string.sub be=233 end end else if be>96 then be=137 cd=string.byte else be=110 bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=nil end end end end else if be<=1198 then if be<=1009 then if be>=931 then if be>=971 then if be<1001 then be=1009 bw=2 else for b=1,31 do do cg[b]=bw end bw=(bw*p)end be=1036 end else be=971 cg={[0]=1}end else if be<900 then ce=''be=909 else bp=(2^52)be=931 end end else if be<=1094 then if be>=1075 then if be>1082 then be=1121 bf=function(b,c,f,g)local g g=((b/2^(c-1))%2^((f-1)-(c-1)+1))return(g-g%bb);end else do bh=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local f,g=0,1 while b>0 and c>0 do local m,p=b%16,c%16 f=f+bm[m+1][p+1]*g b=(b-m)/16 c=(c-p)/l g=g*16 end f=f+b*g+c*g return f end)end be=1094 end else cj=function(b,c,f,g,g,g)local g,l,m=78,52,64,67,75,87,84,18,89,13,52,58,90 while g~=38 do if l<=127 then if l<=52 then m=nil l=84 else if l<118 then do m=nil end l=127 else l=163 m=((c/cg[b])%cg[f])end end else if l>=178 then if l<192 then l=198 do return m end else g=38;end else m=(m-m%1)l=178 end end end end be=1075 end else if be>=1165 then if be>1168 then bu=function()local b b=cd(bq,cq,cq)do cq=(cq+1);end return b;end be=1247 else do ci=function()local b,c,f,g do b,c,g,f=cd(bq,cq,(cq+h))end cq=(cq+4);return((f*16777216)+(g*65536)+(c*256)+b);end end be=1198 end else be=1165 cq=1 end end end else if be<=1358 then if be<=1285 then if be<1279 then be=1285 bv=function()local b,c c,b=cd(bq,cq,(cq+2))cq=(cq+2);return((b*256)+c);end else be=1311 co=function()local b,c,f,g,h,l,m,p=70,48,34,59,11,50,62,76,75,28,56,61,62,29,31,70,82,85,23 while b~=30 do if c>=237 then if c<=312 then if c>=272 then if c<310 then h=(cj(0,f,20)*4294967296+m)c=312 else do p=1 end c=341 end else c=272 do g=cj(20,f,11)end end else if c>=370 then if c>378 then break else c=393 return(l*(2^(g-1023))*(h/bp+p))end else do if not(g~=0)then if not(h==0)then g=1 p=0 else return(l*0)end elseif 2047~=g then else if not(h~=0)then do return(l*(0/0))end else return(l*(1/0))end end end c=370 end end else if c<=95 then if c>52 then c=141 m=ci()else f,g,h,l,m,p=nil c=95 end else if c>=179 then if c<213 then c=217 if((m==0 and f==0))then return 0 end else l=((-1)^cj(31,f,1))c=237 end else f=ci()c=179 end end end end end end else if be<=1311 then be=1335 do bz=function(b,b,b,b,b)local b,c,f,g=63,44,31,29,74,88,56,74,34,33,40,76 while b~=44 do if c>=138 then if c<=138 then c=181 cq=(cq+f);else if c<207 then c=211 return g;else b=44;end end else if c>=76 then if c<109 then f=ci()c=111 else c=138 g=bq:sub(cq,(cq+f-1))end else c=76 f,g=nil end end end end end else if be>1337 then cc={}be=1394 else be=1358 bx=function(...)return{...},ck('#',...)end end end end else if be<=1454 then if be>=1426 then if be<1446 then cm={}be=1454 else be=1483 bg={}end else cb=function(b,c,c)local c,f,g,h,l,m,p,q=50,36,99,34,72,59,97,42,94,40,57,17,22,89,96,21,69,60,95,99,54,13,82,75 while c~=38 do if f>=284 then if f>=398 then if f<=436 then if f<427 then do for r=1,ci()do local s,t,u,x,y,bb=55,46,51,61,12,91,61,98,11,92,93,32,51,12,68,75,50,64,56,97,52,44,66,58,91 while s~=41 do if t<=296 then if t<=145 then if t>=102 then if t>109 then x[29]={};t=181 else x[55]=bu();t=145 end else if t<78 then t=85 u,x,y,bb=nil else x={{},nil,nil}t=102 end end else if t>=232 then if t>=272 then if t>277 then t=314 x[144]=u else u=bf(y,1,2)t=296 end else t=272 bb=ci()end else if t>187 then do y=ci()end t=232 else if not(bu()~=1)then do for s=1,bu()do x[e][s]={bu()==0,ci()}end end end t=209 end end end else if t<=411 then if t<=339 then if t>319 then x[112]=bf(y,3,11);t=372 else t=339 x[15]=bf(bb,1,11);end else if t<405 then t=411 x[91]=bf(bb,12,33);else t=427 x[103]=bf(y,21,29);end end else if t<=466 then if t>432 then t=506 x[18]=-x[112]else t=466 x[163]=bf(y,12,20);end else if t>=543 then if t<564 then t=566 q[r]=x;else break end else t=543 x[o]=-x[103]end end end end end end end f=436 else f=466 h[26]=q;end else if f>=506 then if f<515 then f=523 return h;else c=38;end else f=506 h[116]=bu();end end else if f<=310 then if f<304 then f=310 for c=1,g do local e,o,r,s=47,28,18,92,39,94,47,81,69,11,56,67,83 while e~=33 do if o>=94 then if o<=94 then o=123 if(not(r~=1))then do s=(0~=bu());end elseif(not(r~=3))then s=co();elseif(not(r~=2))then s=bz();elseif(not(r~=0))then s=b[bz()];end;else if o<135 then o=142 p[c]=s;else e=33;end end else if o>=43 then if o>50 then o=94 s=nil else r=bu()o=67 end else o=43 r,s=nil end end end end else f=336 h[49]=p end else if f>340 then f=398 h[135]=l;else f=381 for b=1,ci()do l[b-1]=cb();end end end end else if f<=118 then if f>=91 then if f>100 then f=150 h={}else f=118 l={}end else if f>44 then q={}f=91 else f=70 g,h,l,m,p,q=nil end end else if f>=222 then if f<232 then do g=ci()end f=239 else p={}f=284 end else if f<185 then f=190 m=ci()else f=222 for b=(#cc+1),(#cc+m)do local c,e,f,g,h=49,51,12,46,62,78,47,63,45,50,71,30,22,18,44,39,48,97,46,78,20,93,85,47 while c~=35 do if e<=246 then if e>=172 then if e<=205 then if e<198 then e=205 g=ci()else h[163]=bu();e=222 end else if e>228 then e=270 do h[15]=bf(g,1,11);end else h[144]=bf(f,1,2);e=246 end end else if e>=83 then if e>92 then f=ci()e=172 else h[55]=bu();e=129 end else if e<58 then e=66 f,g,h=nil else h={}e=83 end end end else if e<=343 then if e>=315 then if e<340 then h[103]=bf(f,21,29);e=343 else h[91]=bf(g,12,33);e=385 end else if e<279 then h[112]=bf(f,3,11);e=286 else h[39]=bf(f,12,20);e=315 end end else if e>=448 then if e<489 then e=497 cc[b]=h;else c=35;end else if e>394 then e=448 do h[126]=-h[v]end else do h[18]=-h[112]end e=415 end end end end end end end end end end end end be=1426 end else if be<=1483 then be=1521 bk=function(b,c,e,f,f,f)local f,g,h,l,m do g=b[26]end do h=b[135]end m=b[49]f=cm l=b[116]return function(...)local b,f,o,p,q,r,s,t,u do r=1 end o=-1 p=-1 t={}u={...}b=(ck('#',...)-a)s={}do q={}end for a=0,b do if(not(a<l))then t[(a-l)]=u[(a+1)];else do q[a]=u[(a+1)];end end;end;f=(b-l+1)while true do local a,b,f,l,p,t,u,v,x,y v=g[r]do p=v[15]end l=v[55]b=v[112]t=v[39]y=v[103]do f=v[163]end a=v[18]u=v[91]x=v[n]if not(p<25)then if not(p<38)then if not(p>43)then if not(p>40)then if not(v[15]<39)then do if(v[15]>39)then q[b]=(q[u]-q[y]);else q[v[bc]]=c[u];end end else if(not(q[b]==q[y]))then do r=u;end end;end else if not(p>41)then q[b]();else if(p>42)then do do return q[b]end end else do q[b]=(q[v[91]]/m[y]);end end end end else if not(p>k)then if not(p>44)then local a a=v[112]do q[a]=q[a](q[a+1]);end else if 45==p then local a a={}if(#s>0)then do for f=1,#s do local g g=s[f]for f=0,#g do local k,l,n n=g[f]k=n[1]l=n[2]while k==q and l>=0 do a[l]=k[l]n[1]=a break end end end end end return q[(b+2)],0;else local a,f a=u f=q[a]do for g=(a+1),v[103]do f=(f..q[g]);end;end q[b]=f;end end else if not(p<49)then if not(p~=49)then local a,f,g a=h[v[91]]do f=nil end g={}f=bl({},{__index=function(k,k)local k=g[k];return k[1][k[w]];end,__newindex=function(k,k,l)local k=g[k]k[1][k[2]]=l;end;});for k=d,y do local d d=v[29][k]do if d[1]then do g[(k-1)]={q,d[2],nil};end else g[(k-1)]={c,d[2],nil,nil};end;end do s[(#s+1)]=g;end end;do q[b]=bk(a,f,e);end else local a do a=b end q[a]=q[a](bn(q,a+1,u));end else do if(v[15]>47)then if(not(q[b]==m[y]))then r=u;end;else q[b][q[u]]=q[v[103]];end end end end end else if not(p>30)then if not(p<28)then if not(p>i)then q[b]=nil;else if(p>29)then local a do a=v[112]end q[a](q[(a+1)])else c[u]=q[b];end end else if not(p>25)then r=u;else if(p<27)then q[v[112]]=q[u];else q[b]={};end end end else do if not(p>33)then if not(p>31)then q[b][m[u]]=q[y];else do if(p<ba)then q[b]=e[m[u]];else local a a=b q[a]=q[a]();end end end else if not(v[15]<36)then do if(p<37)then local a,c,d a=b c={q[a](bn(q,a+1,o))}d=0 for f=a,v[103]do d=(d+1);do q[f]=c[d];end end else q[b]=(q[u]*m[y]);end end else if 34==p then local a,c,d,f f=b a,c=bx(q[f](q[(f+1)]))do o=(c+f-1)end do d=0 end for c=f,o do d=(d+1);q[c]=a[d];end;else if(q[y]==q[b])then r=u;end;end end end end end end else if not(p<12)then if not(p<18)then if not(p<21)then if not(p<23)then if 23==v[15]then do q[b][m[u]]=m[y];end else local a,c,d,f c=b d,a=bx(q[c](bn(q,(c+1),v[91])))o=(a+c-1)f=0 do for a=c,o do f=(f+1);q[a]=d[f];end;end end else if(p>21)then q[b]=q[u][m[y]];else local a do a=b end q[a](bn(q,(a+1),u))end end else do if not(p<19)then if 19==p then q[b]=q[u][q[y]];else local a,c,d c=b d={q[c](q[c+1])}a=0 for f=c,y do a=(a+z);do q[f]=d[a];end end end else local a,c c=v[112]a=q[u]q[(c+1)]=a;q[c]=a[m[y]];end end end else if not(p>14)then do if not(p>12)then do if q[v[112]]then r=u;end;end else if(p<14)then local a,c,d,f,g c=v[112]d=y g=(c+2)a={q[c](q[c+1],q[g])}for i=1,d do q[(g+i)]=a[i]end f=q[(c+3)]if f then q[g]=f else do r=v[91];end end;else q[b]=(q[u]+m[y]);end end end else if not(p<16)then if(p<17)then m=cm[b](m)else do q[b]=#q[u];end end else do q[b][q[u]]=m[v[103]];end end end end else if not(p<6)then if not(p<9)then if not(p>9)then local a,c,d d=b a=q[d]do c=q[(d+2)]end if((c>0))then if((a>q[d+1]))then r=u;else q[(d+3)]=a;end elseif((a<q[d+1]))then r=u;else do q[(d+3)]=a;end end else if(p>10)then q[b]=bk(h[u],nil,e);else if not q[b]then do r=u;end end;end end else if not(p>6)then q[v[112]]=(not(v[91]==0));else if(p>7)then if((q[b]<q[y]))then do r=v[j];end end;else q[b]=(q[u]+q[v[103]]);end end end else if not(p<3)then if not(p>3)then q[b]=m[u]else if 4==p then if((m[b]<q[y]))then r=v[91];end;else local a a=b q[a]=q[a](bn(q,a+1,o));end end else if not(p>0)then local a,c,d c=b d=q[c]a=u do for e=1,a do d[e]=q[(c+e)]end;end else if(p>1)then q[b]=(q[u]%m[y]);else local a,c,d a=b d=q[(a+2)]c=(q[a]+d)do q[a]=c;end do if((d>0))then if(not(c>q[a+1]))then do r=u;end q[(a+3)]=c;end elseif(not(c<q[a+1]))then r=u;q[(a+3)]=c;end end end end end end end end r=(r+1);end;end;end else if be<1556 then be=1563 return bk(cb(cp()),{},cp())();else bd=71;end end end end end end end end)(1,10,11,1,29,12,7,3,28,91,46,16,3,126,126,2,8,3,12,3,2,103,2,1,4,1,33,1,112)end
